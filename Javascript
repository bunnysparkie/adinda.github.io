// ===================================================
// 1. ARRAY: Mendefinisikan Data Struktur Organisasi
// ===================================================

const stafArray = [
    { bidang: "Kepala Sekolah", nama: "Suparni, M.Pd.", role: "Pimpinan" },
    { bidang: "Kasubag TU", nama: "Martin Malau, S.Pd.", role: "Pimpinan" },
    { bidang: "Kesiswaan", nama: "Yulianti", role: "Staf" },
    { bidang: "Sarana dan Prasarana", nama: "Kuwat Yuliyono", role: "Staf" },
    { bidang: "Kepegawaian", nama: "Temti Malau", role: "Staf" },
    { bidang: "Operator", nama: "Per, S.Kom", role: "Staf" },
    { bidang: "Bendahara", nama: "Sugati, S.Pd.", role: "Staf" },
    { bidang: "Perpustakaan", nama: "Aelis Yuningsih, S.Kom", role: "Staf" },
    { bidang: "Laboran", nama: "Ananda Joel, S.E.", role: "Staf" },
];

const kesiswaanArray = [
    { kelas: "Kelas X", jumlah: 216 },
    { kelas: "Kelas XI", jumlah: 252 },
    { kelas: "Kelas XII", jumlah: 252 }
];

// Struktur Tugas berlapis untuk demonstrasi Rekursi
const tugasRekursif = {
    title: "Tugas Administrasi TU",
    subTugas: [
        {
            title: "Administrasi Keuangan",
            subTugas: [
                { title: "Laporan Pendapatan dan Pengeluaran" },
                { title: "Laporan Aset dan Kewajiban" },
                {
                    title: "Perencanaan Anggaran",
                    subTugas: [
                        { title: "Pencarian Sumber Dana" },
                        { title: "Penggunaan Keuangan" }
                    ]
                },
                { title: "Pengawasan dan Evaluasi" }
            ]
        },
        {
            title: "Surat Persuratan",
            subTugas: [
                { title: "Penerimaan dan pencatatan" },
                { title: "Penyortiran dan pendisposisian" },
                { title: "Pengarsipan dan Pengiriman" }
            ]
        }
    ]
};

// ===================================================
// 2. LOOPING: Fungsi untuk Menampilkan Staf
// ===================================================

function generateStafCards() {
    const container = document.getElementById('staf-container');
    let htmlContent = '';

    // Menggunakan forEach (bentuk Looping) untuk mengolah setiap objek dalam array
    stafArray.forEach(staf => {
        htmlContent += `
            <div class="card ${staf.role.toLowerCase()}">
                <h4>${staf.bidang}</h4>
                <p><strong>${staf.nama}</strong></p>
            </div>
        `;
    });

    container.innerHTML = htmlContent;
}

// Fungsi Looping untuk Data Kesiswaan
function generateKesiswaanTable() {
    const container = document.getElementById('kesiswaan-data');
    let tableHTML = `
        <table>
            <tr><th>Kelas</th><th>Jumlah Siswa</th></tr>
    `;

    // Menggunakan forEach (bentuk Looping) untuk membuat baris tabel
    kesiswaanArray.forEach(data => {
        tableHTML += `
            <tr>
                <td>${data.kelas}</td>
                <td>${data.jumlah}</td>
            </tr>
        `;
    });

    tableHTML += `</table>`;
    container.innerHTML = tableHTML;
}

// ===================================================
// 3. REKURSI: Fungsi untuk Memproses Struktur Tugas Berlapis
// ===================================================

// Fungsi ini memanggil dirinya sendiri jika ada subTugas
function generateTaskStructure(data) {
    let html = `<li class="task-item"><strong>${data.title}</strong>`;

    // Cek apakah ada sub-tugas
    if (data.subTugas && data.subTugas.length > 0) {
        html += '<ul>';
        // Looping (forEach) di dalam rekursi
        data.subTugas.forEach(subItem => {
            // PANGGILAN REKURSIF: Fungsi memanggil dirinya sendiri
            html += generateTaskStructure(subItem); 
        });
        html += '</ul>';
    }

    html += '</li>';
    return html;
}

// Fungsi utama untuk menjalankan Rekursi
function displayTaskStructure() {
    const container = document.getElementById('tugas-struktur');
    let finalHTML = '<ul>';
    
    // Mulai proses rekursi dari root tugas
    finalHTML += generateTaskStructure(tugasRekursif);
    
    finalHTML += '</ul>';
    container.innerHTML = finalHTML;
}

// ===================================================
// Jalankan Semua Fungsi Saat Halaman Dimuat
// ===================================================
document.addEventListener('DOMContentLoaded', () => {
    generateStafCards(); // Menjalankan Looping dan Array
    generateKesiswaanTable(); // Menjalankan Looping dan Array
    displayTaskStructure(); // Menjalankan Rekursi, Looping, dan Array
});
